@page "/"
@using BlazorGroupB.Data
@using BlazorGroupB.Models

@if (Ths != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>ThreadID</th>
                <th>ThreadName</th>

            </tr>
        </thead>

        <tbody>
            @foreach (var item in Ths)
            {
                <tr>

                    <td>@item.ThreadID</td>
                    <td><a href="/ThreadPage/@item.ThreadID">@item.ThreadName</a> </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-primary">No-Data...</div>
}


<EditForm Model="@th" OnSubmit="OnCreateThread">
    <div class="form-group">
        <label asp-for="th.ThreadName" class="control-label"></label>
        <input asp-for="th.ThreadName" class="form-control" @bind-value=@th.ThreadName />
    </div>
    <button class="btn btn-primary">thread作成</button>
</EditForm>

@code {
    public List<Threads> Ths { get; set; }
    Threads th = new Threads();

    private async void OnCreateThread()
    {

        // //  作成時刻を追加する
        // // DateTime dt = DateTime.Now;
        // // th.CreateThreadTime = dt.Date;

        // //  スレッドを作成する
        // _contextThread.Add(th);
        // _contextThread.SaveChanges();

        // //  主キーを取り出してurlを再定義する
        // Ths = await _contextThread.Threads.ToListAsync<Threads>();

        // Threads laststRow = Ths.OrderByDescending(row => row.ThreadUrl).LastOrDefault();
        // string key = laststRow.ThreadId.ToString();

        // StringBuilder sb = new StringBuilder();
        // sb.Append("/ThreadPage")
        //     .Append("/")
        //     .Append(key);

        // laststRow.ThreadUrl = sb.ToString();
        // _contextThread.SaveChanges();

        // //  そのurlにジャンプする
        // NaviManager.NavigateTo(sb.ToString());
    }

    /// <summary>
    /// 開かれたら最初に起動される
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        //  データベースからデータを取り出す
        // Ths = await _contextThread.Threads.ToListAsync<Threads>();

        //  テスト用のデータを手動で打ち込む

        DateTime dt = DateTime.Now;
        Ths = new List<Threads>()
        {
            //  ここに一つずつ書いていく(五つほど)
            new Threads(1, "一つ目のスレッド", "ユーザー１", dt, dt),
            new Threads(2, "二つ目のスレッド", "ユーザー２", dt, dt),
            new Threads(3, "三つ目のスレッド", "ユーザー３", dt, dt),
            new Threads(4, "四つ目のスレッド", "ユーザー４", dt, dt),
            new Threads(5, "五つ目のスレッド", "ユーザー５", dt, dt)

        };
    }

}
